## Global settings ##
# instance id's distinguish stats of multiple relays.
# do not run multiple relays with the same instance id.
# supported variables:
#  ${HOST} : hostname
instance = "${HOST}"

## System ##
# this setting can be used to override the default GOMAXPROCS logic
# it is ignored if the GOMAXPROCS environment variable is set
max_procs = 2
pid_file = "{{ carbon_relay_ng_work_dir }}/carbon-relay-ng.pid"
# directory for spool files
spool_dir = "spool"

## Logging ##
# one of trace debug info warn error fatal panic
# see docs/logging.md for level descriptions
log_level = "info"

## Inputs ##
### plaintext Carbon ###
listen_addr = "{{ carbon_relay_ng_bind }}:{{ carbon_relay_ng_port }}"
# close inbound plaintext connections if they've been idle for this long ("0s" to disable)
plain_read_timeout = "30m"
### Pickle Carbon ###
#pickle_addr = "0.0.0.0:2013"
# close inbound pickle connections if they've been idle for this long ("0s" to disable)
#pickle_read_timeout = "2m"

## Validation of inputs ##
# you can also validate that each series has increasing timestamps
validate_order = false

# How long to keep track of invalid metrics seen
# Useful time units are "s", "m", "h"
bad_metrics_max_age = "24h"

[[route]]
key = "{{ graphite_route_key }}"
type = "{{ graphite_route_type }}"
addr = "{{ graphite_addr | mandatory }}"
apikey =  "{{ graphite_apikey | mandatory }}"
schemasFile = "{{ carbon_relay_ng_conf_dir }}/storage-schemas.conf"
aggregationFile = "{{ carbon_relay_ng_conf_dir }}/storage-aggregation.conf"

## Instrumentation ##
[instrumentation]
# in addition to serving internal metrics via expvar, you can send them to graphite/carbon
# IMPORTANT: setting this to "" will disable flushing, and metrics will pile up and lead to OOM
# see https://github.com/graphite-ng/carbon-relay-ng/issues/50
# so for now you MUST send them somewhere. sorry.
# (Also, the interval here must correspond to your setting in storage-schemas.conf if you use grafana hosted metrics)
graphite_addr = "localhost:{{ carbon_relay_ng_port }}"
graphite_interval = {{ graphite_interval_ms }}  # in ms
